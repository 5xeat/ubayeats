<!DOCTYPE html>
<html>
  <head>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBL-80hWXX74wWTTTjPIc3uNz_uUH5Wd-w&map_ids=c57b36ae7dbc5a40&callback=initMap&libraries=places&v=beta"
    defer>
    </script>
    
    <style>
      #map {
        height: calc(100vh - 100px);
        width: 100%;
      }
    </style>
  </head>
  <body>
    <%= link_to '編輯外送員資料', edit_driver_profiles_path, class: 'nav-link' %>
    <div class="destination">
      <input
        id="destination-input"
        class="controls"
        type="text"
        placeholder="輸入店家..."
      />
      <button class="btn calc-btn">計算</button>
    </div>
    <div class="info">
      <p class="distance"></p>
      <p class="time"></p>
    </div>

    <div id="map"></div>
  </body>
  <script>
    
    let map, marker, lat, lng;
    function initMap() {

      // 載入路線服務與路線顯示圖層
      let directionsService = new google.maps.DirectionsService();
      let directionsDisplay = new google.maps.DirectionsRenderer({polylineOptions:{strokeColor:"#EF4444",strokeWeight:5}, suppressMarkers: true});

      // 客製化使用者定位icon
      const icons = {
        start: {
          url: 'https://i.imgur.com/5UTYP4Q.png',
          scaledSize: new google.maps.Size(50, 50),
          origin: new google.maps.Point(0,0),
          anchor: new google.maps.Point(0, 0)
        },
        end: {
          url: 'https://www.flaticon.com/svg/static/icons/svg/610/610365.svg',
          scaledSize: new google.maps.Size(20, 20),
          origin: new google.maps.Point(0,0),
          anchor: new google.maps.Point(0, 0)
        }
      };

      // 使用者定位
      navigator.geolocation.watchPosition((position) => {
        lat = position.coords.latitude;
        lng = position.coords.longitude;
        // 初始化地圖
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 18,
            center: { lat: lat, lng: lng },
            mapId: 'c57b36ae7dbc5a40'
        });
        marker = new google.maps.Marker({
            position: { lat: lat, lng: lng },
            map: map,
            animation: google.maps.Animation.BOUNCE,
            icon: icons.start
        });

        const btn = document.querySelector(".calc-btn")
        const destinationInput = document.getElementById("destination-input");
        const destinationAutocomplete = new google.maps.places.Autocomplete(destinationInput);
        btn.addEventListener("click", (e) => {
          if (destinationInput.value !== ""){

            // 取得終點位置的placeID
            const place = destinationAutocomplete.getPlace();

            // 放置路線圖層
            directionsDisplay.setMap(map);

            // 路線相關設定
            let request = {
              origin: { lat: lat, lng: lng },
              destination: { placeId: place.place_id },
              avoidFerries: true,
              avoidHighways: true,
              avoidTolls: true,
              travelMode: 'DRIVING'
            };

            // 繪製路線
            directionsService.route(request, function (result, status) {
              if (status == 'OK') {
                const leg = result.routes[0].legs[0];
                function makeMarker(step, icon, map) {
                  new google.maps.Marker({
                    position: step,
                    map: map,
                    icon: icon
                  })
                };
                makeMarker(leg.start_location, icons.start, map);
                makeMarker(leg.end_location, icons.end, map);
                directionsDisplay.setDirections(result);
              } else {
                console.log(status);
              }
            });

            // 計算路程時間距離
            const service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix(
              {
                origins: [{ lat: lat, lng: lng }],
                destinations: [{placeId: place.place_id}],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: true,
                avoidTolls: true,
              },
              (response, status) => {
                if (status !== "OK") {
                  console.log(status);
                } else {
                  const distance = response.rows[0].elements[0].distance.text;
                  const time = response.rows[0].elements[0].duration.text;
                  document.querySelector('.distance').innerText = distance;
                  document.querySelector('.time').innerText = time;
                }
              }
            )
          }
        })      
      });
    }    
  </script>
</html>